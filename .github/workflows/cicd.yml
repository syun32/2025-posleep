name: backend-ci-cd

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: syun32/posleep-api
  IMAGE_TAG: prod

concurrency:
  group: backend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-backend:
    name: Test (Gradle)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Pick Gradle wrapper location dynamically (backend/gradlew or ./gradlew)
      - name: Pick Gradle wrapper (root or backend)
        id: pick
        shell: bash
        run: |
          set -euo pipefail
          if [ -x backend/gradlew ]; then
            echo "wrapper=backend/gradlew" >> $GITHUB_OUTPUT
            echo "args=" >> $GITHUB_OUTPUT
            echo "Using backend/gradlew"
          elif [ -x gradlew ]; then
            echo "wrapper=./gradlew" >> $GITHUB_OUTPUT
            echo "args=-p backend" >> $GITHUB_OUTPUT
            echo "Using root ./gradlew with -p backend"
          else
            echo "Gradle wrapper not found (backend/gradlew or ./gradlew missing)"
            exit 1
          fi

      - name: Make wrapper executable
        run: chmod +x "${{ steps.pick.outputs.wrapper }}"

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run tests
        run: ${{ steps.pick.outputs.wrapper }} --no-daemon ${{ steps.pick.outputs.args }} clean test

  build-and-push-backend:
    name: Build & Push Docker (Backend)
    needs: test-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: backend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            GIT_SHA=${{ github.sha }}
